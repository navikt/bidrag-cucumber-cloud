name: build and deploy
on:
  push:
    branches:
      - '**'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  INGRESS_CUCUMBER: https://bidrag-cucumber-cloud.ekstern.dev.nav.no

jobs:
  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: navikt/bidrag-docker/exists@v1
        id: dockerimage
        with:
          image_name: bidrag-cucumber-cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo NOT_FOUND=${{ steps.dockerimage.outputs.not_found }} >> $GITHUB_ENV
      - uses: actions/checkout@v2
        if: env.NOT_FOUND == 'true'
      - uses: actions/setup-java@v1
        if: env.NOT_FOUND == 'true'
        with:
          java-version: '16'
      - uses: actions/cache@v1
        if: env.NOT_FOUND == 'true'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v7
        if: env.NOT_FOUND == 'true'
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v7
        if: env.NOT_FOUND == 'true'
      - run: mvn install -B -e
        if: env.NOT_FOUND == 'true'
      - name: Build and publish Docker image
        if: env.NOT_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy bidrag-cucumber-cloud
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy bidrag-cucumber-cloud testapplication for main branches to dev-gcp
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
      - name: Deploy bidrag-cucumber-cloud testapplication for feature branches to dev-gcp
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml

  run-cucumber-tests-for-cucumber-cloud:
    runs-on: ubuntu-latest
    name: "Run tests: bidrag-cucumber-cloud"
    needs: deploy

    steps:
      - run: echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - run: |
          curl -H "Content-Type: application/json" -i \
               --request POST \
               --data '{"ingressesForApps":[
                   "${{ env.INGRESS_CUCUMBER }}@bidrag-cucumber-cloud"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka not http status code = 200)

  run-cucumber-tests-for-bidrag-sak:
    runs-on: ubuntu-latest
    name: "Run tests: bidrag-sak"
    needs: run-cucumber-tests-for-cucumber-cloud

    env:
      INGRESS_SAK: https://bidrag-sak.dev-fss-pub.nais.io

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_SAK=https://bidrag-sak-feature-feature.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
               --request POST \
               --data '{"tags":["@bidrag-sak"],"testUsername":"z992903","ingressesForApps":[
                   "${{ env.INGRESS_SAK }}@bidrag-sak"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka not http status code = 200)

  run-cucumber-tests-for-bidrag-arbeidsflyt:
    runs-on: ubuntu-latest
    name: "Run tests: bidrag-arbeidsflyt"
    needs: deploy

    env:
      INGRESS_OPPGAVE: https://oppgave.dev-fss-pub.nais.io

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_OPPGAVE=https://oppgave-q1.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
               --request POST \
               --data '{"tags":["@bidrag-arbeidsflyt"],"testUsername":"z992903","noContextPathForApps":["oppgave"],"ingressesForApps":[
                   "${{ env.INGRESS_OPPGAVE }}/@no-tag:oppgave"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          # cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka not http status code = 200)

  run-cucumber-tests-for-bidrag-beregn:
    runs-on: ubuntu-latest
    name: "Run tests: bidrag-beregn-*"
    needs: deploy

    env:
      INGRESS_BARNEBIDRAG: https://bidrag-beregn-barnebidrag-rest.dev.adeo.no
      INGRESS_FORSKUDD: https://bidrag-beregn-forskudd-rest.dev.adeo.no
      INGRESS_SAERTILSKUDD: https://bidrag-beregn-saertilskudd-rest.dev.adeo.no

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_BARNEBIDRAG=https://bidrag-beregn-barnebidrag-rest-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
          echo "INGRESS_FORSKUDD=https://bidrag-beregn-forskudd-rest-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_SAERTILSKUDD=https://bidrag-beregn-saertilskudd-rest-feature.dev.adeo.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
               --request POST \
               --data '{"ingressesForApps":[
                   "${{ env.INGRESS_BARNEBIDRAG }}@bidrag-beregn-barnebidrag-rest",
                   "${{ env.INGRESS_FORSKUDD }}@bidrag-beregn-forskudd-rest",
                   "${{ env.INGRESS_SAERTILSKUDD }}@bidrag-beregn-saertilskudd-rest"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          # cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka not http status code = 200)

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs:
      - run-cucumber-tests-for-cucumber-cloud
      - run-cucumber-tests-for-bidrag-arbeidsflyt
      - run-cucumber-tests-for-bidrag-beregn

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn release:update-versions
      - run: |
          BUMPED_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::${BUMPED_VERSION}
        id: snapshot
      - uses: navikt/bidrag-git/commit@v5
        with:
          commit_message: "Bumped to new version: ${{ steps.snapshot.outputs.version }}"
          pattern: "pom.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

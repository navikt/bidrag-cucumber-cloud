name: build and deploy
on:
  push:
    branches:
      - '**'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: navikt/bidrag-docker/exists@v1
        id: dockerimage
        with:
          image_name: bidrag-cucumber-cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo NOT_FOUND=${{ steps.dockerimage.outputs.not_found }} >> $GITHUB_ENV
      - uses: actions/checkout@v2
        if: env.NOT_FOUND == 'true'
      - uses: actions/setup-java@v1
        if: env.NOT_FOUND == 'true'
        with:
          java-version: '16'
      - uses: actions/cache@v1
        if: env.NOT_FOUND == 'true'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v7
        if: env.NOT_FOUND == 'true'
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v7
        if: env.NOT_FOUND == 'true'
      - run: mvn install -B -e
        if: env.NOT_FOUND == 'true'
      - name: Build and publish Docker image
        if: env.NOT_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  deploy-naisjob:
    runs-on: ubuntu-latest
    name: Deploy scheduled job to dev-gcp
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy scheduled job to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/naisjob.yaml

  deploy-nais-app:
    runs-on: ubuntu-latest
    name: Deploy bidrag-cucumber-cloud testapplication to dev-gcp
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy bidrag-cucumber-cloud testapplication for main branches to dev-gcp
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
      - name: Deploy bidrag-cucumber-cloud testapplication for feature branches to dev-gcp
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs: deploy-nais-app

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn release:update-versions
      - run: |
          BUMPED_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::${BUMPED_VERSION}
        id: snapshot
      - uses: navikt/bidrag-git/commit@v5
        with:
          commit_message: "Bumped to new version: ${{ steps.snapshot.outputs.version }}"
          pattern: "pom.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
